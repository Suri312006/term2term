syntax = "proto3";

package t2t;

import "shared.proto";

message User {
  string id = 1;
  string name = 2;
  string suffix = 3;
}

message UserList { repeated User inner = 1; }

service UserService {
  // basic crud over here
  rpc Search(SearchUserReq) returns (SearchUserRes);
  rpc Update(UpdateUserReq) returns (UpdateUserRes);
  rpc Delete(DeleteUserReq) returns (DeleteUserRes);
}

enum SearchUserReqEnum {
  name = 0;
  name_and_suffix = 2;
}

// NOTE: maybe we could support like a live search idk
message SearchUserReq {
  SearchUserReqEnum type = 1;
  string name = 2;
  string suffix = 3;
}

message SearchUserRes { repeated User results = 1; }

// TODO: we need some way to guard these with authentication (maybe look into
// tonic middleware)
message UpdateUserReq {
  string newName = 1;
  string newSuffix = 2;
}

message UpdateUserRes {
  Existence status = 1;
  optional User updatedUser = 2;
}

message DeleteUserReq { User user = 1; }

// able to add more to this later if needed
message DeleteUserRes { bool success = 1; }
